name: Build Check
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: tsc

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Start Docker containers
        run: |
          docker compose -f docker-compose.test.yml up -d
          sleep 15

          # 컨테이너 상태 확인
          docker ps

          if ! docker ps | grep postgres-1; then
            echo "postgres-1 컨테이너가 실행되지 않았습니다."
            docker compose -f docker-compose.test.yml logs
            exit 1
          fi

          # 데이터베이스 연결 확인
          docker exec fs3-moving-team2-be-postgres-1-1 pg_isready -U postgres || exit 1

      - name: Create .env.test file
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db_1" > .env.test
          echo "DATABASE_URL_1=postgresql://postgres:postgres@localhost:5432/test_db_1" >> .env.test
          echo "DATABASE_URL_2=postgresql://postgres:postgres@localhost:5433/test_db_2" >> .env.test
          echo "DATABASE_URL_3=postgresql://postgres:postgres@localhost:5434/test_db_3" >> .env.test

      - name: Run prisma generate
        run: npx prisma generate

      - name: Run Prisma db push for all databases
        run: |
          # 첫 번째 데이터베이스(기본 데이터베이스)
          npx prisma db push --schema=./prisma/schema/schema.prisma

          export DATABASE_URL="postgresql://postgres:postgres@localhost:5433/test_db_2"
          npx prisma db push --schema=./prisma/schema/schema.prisma

          export DATABASE_URL="postgresql://postgres:postgres@localhost:5434/test_db_3"
          npx prisma db push --schema=./prisma/schema/schema.prisma

      - name: Run tests
        run: npm test

      - name: Stop Docker containers
        if: always()
        run: docker compose -f docker-compose.test.yml down

  deploy:
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: tsc

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/fs3-moving-team2-BE
            git pull
            npm install
            tsc
            pm2 restart all
